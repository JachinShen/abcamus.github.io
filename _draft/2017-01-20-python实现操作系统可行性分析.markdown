---
layout: post
title:  "python实现操作系统的可行性分析"
date:   2017-01-20 21:22:37 +0800
categories: 嵌入式开发
tags: python 操作系统
excerpt: 
---

* menu
{:toc}

## 操作系统的任务：

1. 系统资源管理，包括存储资源，时间资源，IO资源
2. 任务管理，包括创建/切换/销毁

所以需要直接和硬件打交道，特别是内存管理，中断控制

## python实现机制：编译成字节码，解释执行。

## 基于python实现任务调度机制
任务调度的两大要求：

1. 任务表示，包含任务特有的资源
2. 任务切换

其中重点是中断向量的处理，现在基于ARM的SoC都和Intel 8086系列CPU一样，通过中断号去对应地址寻找中断向量，这就要求某种语言在编译之后能产生明确的执行地址，但是python解释器只是负责字节码的解释。所以理论上是无法通过任何解释型的语言在当前基于ARM和Intel 8086系列的平台上实现系统的。一种间接的方法是：

构建hal层处理硬件相关的任务，例如响应中断。
